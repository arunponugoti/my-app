version: 0.2

env:
  variables:
    JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"
    DOCKER_REGISTRY_URL: "210934280793.dkr.ecr.us-east-1.amazonaws.com/my-app"
    CLAIR_URL: "clair-Clair-13ZIGO8BEU0ZD-890591430.us-east-1.elb.amazonaws.com"
    ECR_REPOSITORY_URI: "210934280793.dkr.ecr.us-east-1.amazonaws.com/my-app"
    
phases:
  install:
    runtime-versions:
      java: openjdk8
      docker: 18
    commands:
      - echo Entered the install phase...
      - apt-get update -y
    finally:
      - echo This always runs even if the update or install command fails 
  pre_build:
    commands:
      - echo Entered the pre_build phase...
      - ECR_LOGIN=$(aws ecr get-login --no-include-email --region us-east-1)
      - $ECR_LOGIN
      - echo Downloading Clair client Klar-2.1.1
      - wget https://github.com/optiopay/klar/releases/download/v2.1.1/klar-2.1.1-linux-amd64
      - mv ./klar-2.1.1-linux-amd64 ./klar
      - chmod +x ./klar
      - PASSWORD=`echo $ECR_LOGIN | cut -d' ' -f6`
      
    finally:
      - echo This runs even if the login command fails 
  build:
    commands:
      - echo Entered the build phase...
      - echo Build started on `date`
      - mvn clean package
      - docker build -t myapp .
    finally:
      - echo This always runs even if install command fails
  post_build:
    commands:
      - echo Entered the post_build phase...
      - docker tag myapp:latest ${DOCKER_REGISTRY_URL}:myapp
      - docker push ${DOCKER_REGISTRY_URL}:myapp
      - echo Running Clair scan on the Docker Image
      - DOCKER_USER=AWS DOCKER_PASSWORD=${PASSWORD} CLAIR_ADDR=$CLAIR_URL CLAIR_OUTPUT=Critical ./klar $ECR_REPOSITORY_URI
      - echo Build completed on `date`
      
artifacts:
  files:
    - taskdef.json
    - appspec.yml